<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">




<!-- 相当于dao的包名 -->
<mapper namespace="com.mybatis.dao.UserDao">
	
	<!-- 为了返回list 类型而定义的returnMap -->
    <resultMap type="user" id="resultListUser">
        <id column="id" property="id" />
        <result column="name" property="name" />
        <result column="password" property="password" />
        <result column="email" property="email" />
        <result column="birthday" property="birthday" />
    </resultMap>
	
	
	
	<select id="selectUserByID" parameterType="int" resultType="user">
		select * from users where id = #{id}
	</select> 
	
	<!-- 最笨的方式  可能会被注入 -->
	<select id="selectListByName1" parameterType="java.lang.String" resultMap="resultListUser">
		select * from users where name like #{b}
	</select>
	
	<!-- mysql :CONCAT是sql中的拼接  ,Oracle :|| -->
	<select id="selectListByName2" parameterType="java.lang.String" resultMap="resultListUser">
		select * from users where name like   CONCAT(CONCAT('%', #{a}), '%');
	</select>
	
	<!-- bind标签可以拼接字符    _parameter是参数值 -->
	<select id="selectListByName3" parameterType="java.lang.String" resultMap="resultListUser">
		<bind name="c" value="'%' + _parameter + '%'" />
		select * from users where name like    #{c}
	</select>
	
	<!-- resultType="user" 不用配resultMap了（resultMap在多表查询的时候比较好用）-->
	<select id="selectListByName4" parameterType="java.lang.String"   resultType="com.mybatis.model.User">
		select * from users where name like  CONCAT(CONCAT('%', #{a}), '%');  
	</select>
	
	<!--多参数 -->
	<select id="selectListByName5"   resultType="User">
		select * from users where name =  #{0}   or  id = #{1}
	</select>
	
</mapper>